<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated 13-dic-2018 16:06:53 by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="modelo.entidades.Usuario" table="usuario" catalog="teletrabajo" optimistic-lock="version">
        <id name="idUsuario" type="java.lang.Integer">
            <column name="idUsuario" />
            <generator class="identity" />
        </id>
        <property name="nombre" type="string">
            <column name="nombre" length="45" not-null="true" />
        </property>
        <property name="dni" type="string">
            <column name="dni" length="15" not-null="true" unique="true" />
        </property>
        <property name="password" type="string">
            <column name="password" length="45" not-null="true" />
        </property>
        <property name="email" type="string">
            <column name="email" length="45" not-null="true" unique="true" />
        </property>
        <property name="login" type="string">
            <column name="login" length="45" not-null="true" unique="true" />
        </property>
        <set name="versions" table="version" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <one-to-many class="modelo.entidades.Version" />
        </set>
        <set name="usuarioAlertas" table="usuario_alerta" inverse="true" lazy="false" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <one-to-many class="modelo.entidades.UsuarioAlerta" />
        </set>
        <set name="chatgrupos" table="usuario_chatgrupo" inverse="false" lazy="false" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <many-to-many entity-name="modelo.entidades.Chatgrupo">
                <column name="idChatGrupo" not-null="true" />
            </many-to-many>
        </set>
        <set name="requisitos" table="requisito" inverse="true" lazy="false" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <one-to-many class="modelo.entidades.Requisito" />
        </set>
        <set name="clientes" table="usuario_cliente" inverse="false" lazy="false" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <many-to-many entity-name="modelo.entidades.Cliente">
                <column name="idCliente" not-null="true" />
            </many-to-many>
        </set>
        <set name="tareas" table="tarea_usuario" inverse="true" lazy="false" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <many-to-many entity-name="modelo.entidades.Tarea">
                <column name="idTarea" not-null="true" />
            </many-to-many>
        </set>
        <set name="mensajes" table="mensaje" inverse="true" lazy="false" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <one-to-many class="modelo.entidades.Mensaje" />
        </set>
        <set name="informes" table="informe" inverse="true" lazy="false" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <one-to-many class="modelo.entidades.Informe" />
        </set>
        <set name="rolUsuarioProyectos" table="rol_usuario_proyecto" inverse="true" lazy="false" fetch="select">
            <key>
                <column name="idUsuario" not-null="true" />
            </key>
            <one-to-many class="modelo.entidades.RolUsuarioProyecto" />
        </set>
    </class>
</hibernate-mapping>
